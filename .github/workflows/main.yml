name: Build Application

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3.5.0
        with:
          check-latest: true
      - name: Updating and upgrading brew
        run: |
          ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
          brew --version
      - name: Build
        run: go build .
        
      - name: Save Binary
        uses: actions/upload-artifact@v3
        with:
          name: uploads
          path: PomfortProxy

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v3.5.0
        with:
          check-latest: true
      - name: Build
        run: go build .
      - name: Save Binary
        uses: actions/upload-artifact@v3
        with:
          name: uploads
          path: PomfortProxy.exe

  upload-release:

    runs-on: ubuntu-20.04
    needs: [build-macos, build-windows]

    steps:
    - uses: actions/checkout@v1
    - name: create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false   
    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: uploads    
    - name: upload macos
      id: upload-macos 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/macos.zip
        asset_name: macos.zip
        asset_content_type: application/zip  
    - name: upload linux
      id: upload-linux
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/linux.zip
        asset_name: linux.zip
        asset_content_type: application/zip   
    - name: upload windows
      id: upload-windows
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/windows.zip
        asset_name: windows.zip
        asset_content_type: application/zip                        
  
